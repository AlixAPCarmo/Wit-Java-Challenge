networks:
  challenge-network:
    driver: bridge

services:
  kafka:
    image: apache/kafka
    container_name: kafka
    networks:
      - challenge-network
    ports:
      - "9092:9092"
    environment:
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_NODE_ID: "1"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_CONTROLLER_LISTENER_NAMES: "Challenge"
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - ./kraft-logs:/tmp/kraft-combined-logs
      - ./scripts/create-topics.sh:/usr/bin/create-topics.sh
    healthcheck:
      test: ["CMD-SHELL", "echo -e 'exit' | /opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server kafka:9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      sh -c "
      /opt/kafka/bin/kafka-storage.sh format --ignore-formatted --cluster-id 5L6g3nShT-eMCtK--X86sw -c /opt/kafka/config/kraft/server.properties &&
      /opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/kraft/server.properties &&
      sleep 10 &&
      /usr/bin/create-topics.sh"

  rest:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rest
    networks:
      - challenge-network
    ports:
      - "8080:8080"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
